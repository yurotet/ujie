{
  "name": "vue-touch",
  "version": "0.1.2",
  "main": "vue-touch.js",
  "description": "Hammer.js based touch events plugin for Vue.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/vuejs/vue-touch.git"
  },
  "bugs": {
    "url": "https://github.com/vuejs/vue-touch/issues"
  },
  "dependencies": {
    "hammerjs": "^2.0.1"
  },
  "devDependencies": {
    "vue": "^0.10.5"
  },
  "scripts": {
    "build": "browserify -e example/example.js -o example/example.build.js",
    "dev": "watchify -e example/example.js -o example/example.build.js"
  },
  "readme": "# vue-touch\n\n> Touch events plugin for Vue.js\n\nThis is a directive wrapper for Hammer.js 2.0.\n\n## Usage\n\n### CommonJS\n\n- Available through npm as `vue-touch`. For Duo/Component you can isntall as `vuejs/vue-touch`.\n\n  ``` js\n  var vueTouch = require('vue-touch')\n  Vue.use(vueTouch)\n  ```\n\n### Direct include\n\n- You can also directly include it with a `<script>` tag when you have Vue itself included globally. It will automatically install itself, and will add a global `VueTouch`.\n\n### Use in templates\n\nThen you can do this:\n\n``` html\n<a v-touch=\"tap:onTap\">Tap me!</a>\n```\n\n### Register a custom event\n\n``` js\n// example registering a custom doubletap event.\n// the `type` indicates the base recognizer to use from Hammer\n// all other options are Hammer recognizer options.\nVueTouch.registerCustomEvent('doubletap', {\n  type: 'tap',\n  taps: 2\n})\n```\n\nSee [Hammer.js documentation](http://hammerjs.github.io/getting-started.html) for all available events.\n\nSee `/example` for a multi-event demo. To build the example, you need to have Browserify installed and then `npm run build`.\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "vue-touch@0.1.2",
  "dist": {
    "shasum": "c7f8cae3c134a5c2bcdbc7d2afbb07e7a6df0f0f"
  },
  "_from": "vue-touch@^0.1.2",
  "_resolved": "https://registry.npmjs.org/vue-touch/-/vue-touch-0.1.2.tgz"
}
